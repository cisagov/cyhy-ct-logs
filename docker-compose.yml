version: "3.7"

secrets:
  redis_conf:
    file: ./secrets/redis.conf
  admiral_yml:
    file: ./secrets/admiral.yml

x-admiral-template: &admiral-template
  build:
    context: .
    dockerfile: Dockerfile-admiral
  image: admiral
  init: true
  environment:
    ADMIRAL_CONFIG_FILE: '/run/secrets/admiral_yml'
    ADMIRAL_CONFIG_SECTION: dev-mode
    ADMIRAL_WORKER_NAME: dev
  secrets:
    - source: admiral_yml
  volumes: # map for development only, comment out otherwise
   - ./src/admiral:/usr/src/admiral/admiral
  deploy:
    mode: replicated
    replicas: 6

services:
  redis:
    image: "redis:alpine"
    command:
     - "redis-server"
     - "/run/secrets/redis_conf"
    ports:
      - "6379:6379"
    secrets:
      - source: redis_conf

  redis-commander:
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    #build: .
    restart: always
    environment:
    - REDIS_HOSTS=default:redis:6379:0:fruitcake
    ports:
    - "8082:8081"

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example

  celery-flower:
    image: crgwbr/docker-celery-flower
    environment:
      #TODO: get this into the secrets raft
      CELERY_BROKER_URL: 'redis://:fruitcake@redis:6379/0'
    ports:
      - "5555:5555"

  cert-worker:
    <<: *admiral-template
    environment:
      ADMIRAL_CONFIG_SECTION: cert-worker
      ADMIRAL_WORKER_NAME: cert

  scanner-worker:
    <<: *admiral-template
    environment:
      ADMIRAL_CONFIG_SECTION: scanner-worker
      ADMIRAL_WORKER_NAME: scanner
